#!/bin/sh

# Set default values
# Argument --project. Supported values: "sequra", "sequra-no-address"
PROJECT="sequra"
# Argument --branch. Name of the Git branch to checkout
BRANCH="master"
# Argument --filename. Optional. Name of the zip file to create
FILENAME=""

while [[ "$#" -gt 0 ]]; do
    if [[ "$1" == --project=* ]]; then
        PROJECT="${1#*=}"
        # Check if the project is supported
        if [[ "$PROJECT" != "sequra" && "$PROJECT" != "sequra-no-address" ]]; then
            echo "❌ The project \"$PROJECT\" is not supported. Choose between \"sequra\" and \"sequra-no-address\""
            exit 1
        fi

    elif [[ "$1" == --branch=* ]]; then
        BRANCH="${1#*=}"
    elif [[ "$1" == --filename=* ]]; then
        FILENAME="${1#*=}"
        if [[ "$FILENAME" != *.zip ]]; then
            FILENAME="$FILENAME.zip"
        fi
    fi
    shift
done

echo "Creating a zip file for the \"$PROJECT\" project using branch \"$BRANCH\""

GITHUB_REPO_OWNER="sequra"
GITHUB_REPO_NAME="woocommerce-sequra"
GIT_REPO="https://github.com/"${GITHUB_REPO_OWNER}"/"${GITHUB_REPO_NAME}".git"
BASEDIR="$(dirname $(realpath $0))/.."

mkdir -p "$BASEDIR/zip" || true
rm -rf "$BASEDIR/zip/$GITHUB_REPO_NAME"

echo "Cloning the repository..."
git clone --depth 1 --branch "$BRANCH" "$GIT_REPO" "$BASEDIR/zip/$GITHUB_REPO_NAME" || exit 1

cd "$BASEDIR/zip/$GITHUB_REPO_NAME"

# Get last commit hash
COMMIT_HASH=$(git rev-parse --short HEAD)

echo "Installing dependencies and building the project..."
bin/composer install --no-dev --quiet --no-interaction

if [[ "$PROJECT" == "sequra" ]]; then
    bin/npm install --no-progress --no-update-notifier
    bin/npm run build --no-progress --no-update-notifier
    cd "$PROJECT"
elif [[ "$PROJECT" == "sequra-no-address" ]]; then
    cd "glue-plugins/$PROJECT"
fi

# Read plugin version from headers something like  * Version:           3.0.4
PLUGIN_VERSION=$(grep "Version:" $PROJECT.php | awk '{print $3}')

echo "Removing unwanted files"
rm -Rf node_modules
rm -Rf tests
rm -Rf tests-e2e
rm -Rf apigen
rm -f .gitignore
rm -f package.json
rm -f package-lock.json
rm -f composer.json
rm -f composer.lock
rm -f .phpcs.xml.dist
rm -f babel.config.json
rm -f phpstan.neon
rm -f phpunit.xml.dist
rm -f playwright.config.js
rm -f postcss.config.js
rm -f *.log
rm -f webpack.config.js
cd ..

echo "Creating the zip file..."

if [ -z "$FILENAME" ]; then
    FILENAME="$PROJECT-$PLUGIN_VERSION-$COMMIT_HASH.zip"
fi

zip -r9 $FILENAME "$PROJECT"
mv $FILENAME "$BASEDIR/zip"
cd "$BASEDIR/zip"

echo "Removing the temporary directory..."
rm -rf "$BASEDIR/zip/$GITHUB_REPO_NAME"

echo "✅ Done!"