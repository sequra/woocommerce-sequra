<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards based custom ruleset for your plugin">
	<description>WooCommerce dev PHP_CodeSniffer ruleset.</description>
	<!-- What to scan -->
	<file>.</file>
	<exclude-pattern>vendor/</exclude-pattern>
	<exclude-pattern>node_modules/</exclude-pattern>
	<exclude-pattern>languages/</exclude-pattern>
	<exclude-pattern>assets/</exclude-pattern>
	<exclude-pattern>tests/bootstrap.php</exclude-pattern>
	<!-- How to scan -->
	<!-- Usage instructions: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage -->
	<!-- Annotated ruleset: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<arg value="sp"/> <!-- Show sniff and progress -->
	<arg name="basepath" value="./"/><!-- Strip the file paths down to the relevant bit -->
	<arg name="colors"/>
	<arg name="extensions" value="php"/>
	<arg name="parallel" value="8"/><!-- Enables parallel processing when available for faster results. -->
	<!-- Rules: Check PHP version compatibility -->
	<config name="testVersion" value="7.3-"/>
	<rule ref="PHPCompatibility">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>
	<!-- Rules: WordPress Coding Standards -->
	<config name="minimum_supported_wp_version" value="5.9"/>
	<rule ref="WordPress.Files.FileName.InvalidClassFileName">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>
	<rule ref="Generic.Commenting">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>
	<rule ref="Generic.Commenting.Todo.TaskFound">
		<exclude name="Generic.Commenting.Todo.TaskFound"/>
	</rule>
	<rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable">
		<exclude name="VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable"/>
	</rule>
	<rule ref="Squiz.PHP.CommentedOutCode.Found">
		<exclude name="Squiz.PHP.CommentedOutCode.Found"/>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment.Missing">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.VariableComment.Missing">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.Missing">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>
	<rule ref="WordPressVIPMinimum">
		<exclude name="WordPressVIPMinimum.JS.Window"/>
		<exclude name="WordPressVIPMinimum.JS.DangerouslySetInnerHTML"/>
		<exclude name="WordPressVIPMinimum.JS.InnerHTML"/>
		<exclude name="WordPressVIPMinimum.JS.StrippingTags"/>
		<exclude name="WordPressVIPMinimum.JS.StringConcat"/>
		<exclude name="WordPressVIPMinimum.JS.HTMLExecutingFunctions"/>
	</rule>
	<rule ref="WooCommerce-Core" />
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="sequra"/>
				<element value="woocommerce"/>
			</property>
		</properties>
	</rule>
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>
</ruleset>
